#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#    Problem Number: 15649                             :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#    By: shaawwert6044 <boj.kr/u/shaawwert6044>      +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#    https://boj.kr/15649                          #+#        #+#      #+#     #
#    Solved: 2023/11/23 15:52:57 by shaawwert6044 ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #
# 너비 : M
# 자연수 : N

# 조합론 : 재료 중에 뽑는다.
# M개 중에 N개를 뽑은 경우의 수를 모두 출력 (단! 중복은 안됨)

# 자료구조
# L = 자연수 N까지의 리스트
# A = 조합을 담을 리스트

# 자료구조
# N을 저장할 리스트 : [False] * N
# result를 저장할 리스트 : []


# 1. 종료조건 : 재귀함수의 종료조건
#     1. 호출된 함수의 스택이 문제에서 요구하는 M과 동일해질 때,
#     2. print(결과)
#     3. 아무것도 반환하지 않고 함수 종료

# 1. i는 0부터 len(visited)의 길이만큼 증가
#     1. 만약 i가 지시하는 수를 체크하지 않았다면?
#         1. visited에 체크, result에 i가 지시하는 수 추가
#         2. ===================================
#             1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료
#             2. 만약 i+1가 지시하는 수를 체크하지 않았다면?
#             3. visited에 체크, result에 i가 지시하는 수 추가
#             4. ===================================
#                 1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료
#                 2. 만약 i+2가 지시하는 수를 체크하지 않았다면?
#                 3. visited에 체크, result에 i가 지시하는 수 추가
#                 4. ================================== …
#                     1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료
#     2. 만약 i가 지시하는 수를 체크하지 않았다면?
#         1. visited에 체크, result에 i가 지시하는 수 추가
#         2. ===================================
#             1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료
#             2. 만약 i+1가 지시하는 수를 체크하지 않았다면?
#             3. visited에 체크, result에 i가 지시하는 수 추가
#             4. ===================================
#                 1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료
#                 2. 만약 i+2가 지시하는 수를 체크하지 않았다면?
#                 3. visited에 체크, result에 i가 지시하는 수 추가
#                 4. ================================== …
#                     1. (종료조건) : i가 m의 길이와 같은가? => 맞다면 print하고 함수 종료

#!!!!! 안되면 외운다! 외우고, 다시 응용한다! why? 모르는 문제를 빠르고 확장성있게 이해하는 가장 무식한 방법
#!!!!! 디버깅을 돌려보며 의사코드를 작성한다.

import sys
input = sys.stdin.readline

n, m = map(int, input().split())
visited = [False] * n
result = []

def sol(k, n, m):
    if k == m:
        print(*result)
        return

    for i in range(0, len(visited)):
        if not visited[i]:
            visited[i] = True
            result.append(i+1)
            sol(k+1, n, m)
            visited[i] = False
            result.pop()

sol(0, n, m)